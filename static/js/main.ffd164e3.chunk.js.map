{"version":3,"sources":["reportWebVitals.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","circleInnerProps","id","cx","cy","r","stroke","strokeWidth","fill","circleOuterInitProps","strokeDasharray","Math","ceil","PI","style","transform","transformOrigin","textProps","x","y","fontSize","fontWeight","alignmentBaseline","textAnchor","perimeter","Demo1","initValue","useState","rangeValue","setRangeValue","circleOuterProps","setCircleOuterProps","width","height","onChange","e","value","target","percent","d2","type","min","max","step","Demo2","ref","useRef","useEffect","src","alt","Demo3","cx1","setCx1","cx2","setCx2","r1","setR1","r2","setR2","turn","setTurn","onClick","move","document","getElementById","scale","beginElement","attributeType","attributeName","from","to","begin","dur","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ffd164e3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useRef, useEffect } from 'react';\n// require(\"./ripple-min\");\n\nconst circleInnerProps = {\n    id: 'circle1',\n    cx: 50,\n    cy: 50,\n    r: 50 - 2,\n    stroke: '#eee',\n    strokeWidth: 2,\n    fill: 'none',\n};\n\nconst circleOuterInitProps = {\n    id: 'circle2',\n    cx: 50,\n    cy: 50,\n    r: 50 - 5,\n    stroke: 'blue',\n    strokeWidth: 5,\n    fill: 'none',\n    strokeDasharray: `0 ${Math.ceil(2 * Math.PI * (50 - 5))}`,\n    style: {\n        transform: 'rotate(-90deg)',\n        transformOrigin: 'center',\n    },\n};\n\nconst textProps = {\n    x: '50%',\n    y: '50%',\n    fill: 'blue',\n    style: {\n        fontSize: '22px',\n        fontWeight: '700',\n    },\n    alignmentBaseline: 'middle',\n    textAnchor: 'middle',\n};\n// 外圆周长\nconst perimeter = 2 * Math.PI * circleOuterInitProps.r;\n\nexport const Demo1 = ({ initValue = 0 }) => {\n    const [rangeValue, setRangeValue] = useState(initValue);\n    const [circleOuterProps, setCircleOuterProps] = useState(circleOuterInitProps);\n    /**\n     * @description 改变圆strokeDasharray\n     * @param {*} e\n     */\n    const onRangeChange = e => {\n        const {\n            target: { value },\n        } = e;\n        setRangeValue(value);\n        const percent = value / 100;\n        const d1 = percent * perimeter;\n        const d2 = (1 - percent) * perimeter;\n        const strokeDasharray = `${d1} ${d2}`;\n\n        setCircleOuterProps({\n            ...circleOuterProps,\n            strokeDasharray,\n        });\n    };\n\n    return (\n        <div>\n            <div>demo1</div>\n            <svg width=\"100\" height=\"100\">\n                <circle {...circleInnerProps} />\n                <circle {...circleOuterProps} />\n                <text {...textProps}>{rangeValue}</text>\n            </svg>\n            <input onChange={onRangeChange} value={rangeValue} type=\"range\" min=\"0\" max=\"100\" step=\"0.01\" />\n        </div>\n    );\n};\n\nexport const Demo2 = () => {\n    const ref = useRef(null);\n\n    useEffect(() => {\n        // console.log('ref.current :>> ', ref.current);\n    }, []);\n\n    return (\n        <div>\n            demo2\n            <br />\n            <img\n                ref={ref}\n                id=\"img\"\n                width=\"200\"\n                src=\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\"\n                alt=\"\"\n            />\n        </div>\n    );\n};\n\nexport const Demo3 = () => {\n    const [cx1, setCx1] = useState(120);\n    const [cx2, setCx2] = useState(400);\n    const [r1, setR1] = useState(50);\n    const [r2, setR2] = useState(90);\n    const [turn, setTurn] = useState(true);\n\n    const onClick = () => {\n        const move = document.getElementById('move');\n        const scale = document.getElementById('scale');\n        if (turn) {\n            setCx1(120);\n            setCx2(400);\n            setR1(50);\n            setR2(90);\n            move.beginElement();\n            scale.beginElement();\n            setTurn(false);\n        } else {\n\n            setCx1(400);\n            setCx2(120);\n            setR1(90);\n            setR2(50);\n            move.beginElement();\n            scale.beginElement();\n            setTurn(true);\n        }\n    };\n\n    return (\n        <div>\n            <div>demo3</div>\n            <div>\n                <button onClick={onClick}>按钮</button>\n            </div>\n            <svg width=\"100%\" height=\"400\">\n                <circle cx=\"120\" cy=\"100\" r=\"50\" fill=\"none\" stroke=\"red\">\n                    <animate\n                        id=\"move\"\n                        attributeType=\"XML\"\n                        attributeName=\"cx\"\n                        from={cx1}\n                        to={cx2}\n                        begin=\"click\"\n                        dur=\"1s\"\n                        fill=\"freeze\"\n                    />\n                    <animate\n                        id=\"scale\"\n                        attributeType=\"XML\"\n                        attributeName=\"r\"\n                        from={r1}\n                        to={r2}\n                        begin=\"click\"\n                        dur=\"1s\"\n                        fill=\"freeze\"\n                    />\n                </circle>\n            </svg>\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Demo1, Demo2, Demo3 } from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <div>\n            <Demo1 />\n            <Demo2 />\n            <Demo3 />\n        </div>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}